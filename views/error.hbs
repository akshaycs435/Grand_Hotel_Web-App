var createError = require("http-errors");
var express = require("express");
var path = require("path");
var cookieParser = require("cookie-parser");
var logger = require("morgan");
var hbs = require("express-handlebars");
let Hbs = require("handlebars");
const Razorpay = require("razorpay");
const randomstring = require("randomstring");

const PDFDocument = require('pdfkit');
const fs = require('fs');






var userRouter = require("./routes/user");
var adminRouter = require("./routes/admin");
var hotelRouter = require("./routes/hotel");
var app = express();


var session = require("express-session");
const { error, info } = require("console");
const { log } = require("handlebars/runtime");

// view engine setup
app.set("views", path.join(__dirname, "views"));
app.set("view engine", "hbs");

app.engine(
  "hbs",
  hbs.engine({
    extname: "hbs",
    defaultLayout: "Layout",
    layoutsDir: __dirname + "/views/layout/",
    partialsDir: __dirname + "/views/partials",
  })
);


app.use(logger("dev"));
app.use(express.json());
app.use(express.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, "public")));
app.use(session({ secret: 'Key', cookie: { maxAge: 60000000 } }))
const razorpayInstance = new Razorpay({
  key_id: "rzp_test_8cTRaG2qyqmSGG",
  key_secret: "lPhtD4Guxq3dUurYJLs9OwXi"
});

const otpCache = {};

function generateOTP() {
  return randomstring.generate({length:4,charset:'numeric'})
}

 
function sendOTP(email,otp) {
  const mailOptions = {
    from:'akshaycs0480@gmail.com',
    to:email,
    subject: 'OTP Verification',
    text:`Your OTP verification is:${otp}`
  };


  let transporter = nodemailer.createTransport({
    service:'Gmail',
    auth: {
      user:'akshaycs0480@gmail.com',
      pass:'acsa ghjk vbnx asty'
    },
    tls: {
      rejectUnauthorized:false
    }
  });

  transporter.sendMail(mailOptions, (error,info) => {
    if(error) {
      console.log('error occurred:', error);
    }else {
      console.log('OTP Email sent successfully:', info.response);
    }
  });
}


app.post('/reqotp',(req,res) => {
  const {email} = req.body;
  const otp = generateOTP();
  otpCache[email] = otp;


  sendOTP(email,otp);
  res.cookie('otpcache',otpCache, {maxAge: 30000, httpOnly: true});
  res.status(200).json({message:'otp sent successfully'});

})


app.post('/verifyotp',(req,res) => {
  const { email,otp} = req.body;

  if (!otpCache.hasOwnProperty(email)) {
    return res.status(400).json({message:'email not found'});
  }

  if (otpCache[email] === otp.trim()) {

    delete otpCache[email];
    return res.status(200).json({message: 'otp verified successfully'})
  }else{
    return res.status(400).json({message:'inavlid otp'});
  }

});





app.use((req, res, next) => {
  res.set('cache-control', 'no-store')
  next()
})
// app.use(fileupload());

app.use("/", userRouter);

app.use("/admin", adminRouter);

app.use("/hotel",hotelRouter);


// catch 404 and forward to error handler
app.use(function (req, res, next) {
  next(createError(404));
});


// error handler
app.use(function (err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get("env") === "development" ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render("error");
});


module.exports = app;


=============================================================================================



<html>
  <head>
    <title>OTP in JS</title>
    {{!-- <link rel="stylesheet" href="emailotp.css" /> --}}
    <script src="https://smtpjs.com/v3/smtp.js"></script>
    
  </head>
  <body>
   


    <div class="form">
        <div class="main1">

            <form action="/reqotp" method="post">
            <input type="email" id="otpField" name="email" class="form">
            <button type="submit" class="btn btn-primary">request otp</button>
            </form>
        </div>

        <div class="main2">

            <form action="/verifyotp" method="post">
            <input type="hidden" id="verifyEmail" name="email">
            <input type="text" id="otpField" class="form-control" name="otp" placeholder="enter yoyr otp">
            <button type="submit" class="btn btn-primary">verify otp</button>
            </form>
        </div>


    </div>


<script> 
   
    document.querySelector("#otpField").addEventListener("input",function (event) {
        document.querySelector("#verifyEmail").value = event.target.value;
    })
</script>


  </body>
</html>


=========================================================================================================